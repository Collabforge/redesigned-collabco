!function(a){"use strict";function e(e,l,t,n){var i="",o="",s="",r=0,c="flagged";"follow"===e?(i="icon-eye",o="icon-eye-full flagged"):"support"===e&&(i="icon-heart",o="icon-heart-full flagged"),s="sidebar"==n?a(l).parent().siblings(".value"):a(l).siblings(".value");var r=parseInt(s.first().text());"flagged"==t?(a(l).siblings('[class^="icon-"]').addClass(o),s.addClass(c),a(l).siblings('[class^="icon-"]').removeClass(i),r+=1):(a(l).siblings('[class^="icon-"]').addClass(i),a(l).siblings('[class^="icon-"]').removeClass(o),s.removeClass(c),r-=1),s.text(r)}function l(e){var l=a(e).parent();return l.hasClass("sidebar-link")?"sidebar":l.hasClass("card-full-link")?"card-full":l.hasClass("card-large-link")?"card-large":l.hasClass("card-small-link")?"card-small":null}var t=(a(window),a(document));t.ready(function(){a("*").find(".node-type-conversation").length>0&&a(".ui-menu-collaboration-discussion").addClass("active"),a("*").find(".node-type-knowledge-object").length>0&&a(".ui-menu-collaboration-documents").addClass("active"),a(".cockade").hover(function(){a(this).next().stop().animate({"max-width":"100%",padding:"5px 6px 5px 40px"},"fast")},function(){a(this).next().stop().animate({"max-width":"0",padding:"5px 0"},"fast")}),a(".card img, .full-width-card img").each(function(e,l){var t=a(this).attr("src");a(this).parent("a").css({"background-image":'url("'+t+'")'}),a(this).remove()}),a(".card-large-link, .card-full-link, .small-card-link, .sidebar-2 .stat-label, .sidebar-2 .nav li ").hover(function(){a(this).find("a , .value").css("color","#00746A")},function(){a(this).find("a , .value").css("color","inherit")}),a('[data-toggle="popover"]').popover(),a(".page-search .nav-tabs").insertAfter("#search-form"),a('.page-node-edit.node-type-hub .nav a[href="#edit-options"]').tooltip({placement:"right",title:"Please review the publishing options before finalising the promotion of this idea. By default, it will be unpublished and thus not visible on the website."}),a('.event a[class^="icon-"], .event a[class*=" icon-"]').click(function(e){e.preventDefault(),a(this).parent().find(".flag-wrapper a").trigger("click"),e.stopPropagation()});var n=".follow.event, .follow.event .flag-wrapper, .support.event, .support.event .flag-wrapper ";t.on("click",n,function(e){e.target==this&&(e.preventDefault(),a(this).find("a").trigger("click"))}),a(".follow.event, .support.event").on("click",".flag-wrapper a",function(a){a.stopPropagation()}),a(".comment").filter(".small-card-link,.card-large-link,.card-full-link").click(function(){event.preventDefault();var e=a(this).find(".icon-dialogue").attr("href");window.location.href=e}),a(".ideas.card-large-link, .share .stat-label, .mail .stat-label, .sidebar-2 ul li").click(function(){event.preventDefault();var e=a(this).find("a").attr("href");window.location.href=e}),t.bind("flagGlobalAfterLinkUpdate",function(a,t){var n=t.flagStatus,i="",o="",s="";switch(t.flagName){case"support_collaboration":i=".flag-support-collaboration-"+t.contentId,o="support";break;case"follow_collaboration":i=".flag-follow-collaboration-"+t.contentId,o="follow";break;case"challenge_flag":i=".flag-challenge-flag-"+t.contentId,o="follow";break;case"support_idea":i=".flag-support-idea-"+t.contentId,o="support";break;case"following_idea":i=".flag-following-idea-"+t.contentId,o="follow"}s=l(i),e(o,i,n,s)})}),a.fn.stopBodyScroll=function(){a(this).closest("body").toggleClass("stop-scrolling")}}(jQuery),function(a){"use strict";var e=(a(window),a(document));e.ready(function(a){function e(){n.css("display","block"),n.animate({opacity:"1"},100),t.animate({left:"0"},150),a("body").addClass("stop-scrolling")}function l(){n.css({display:"none",opacity:"0"}),t.animate({left:i},200),a("body").removeClass("stop-scrolling")}var t=a("nav.slider-mobile"),n=a(".overlay"),i=t.css("left");a("#nav-hamburger").click(function(a){a.preventDefault(),e()}),a("#nav-mobile-close, .overlay").click(function(a){a.preventDefault(),l()})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
