<?php

/**
 * @file
 * The install file for the govCMS distribution.
 *
 * The original foundation for the govCMS distribution is aGov; the Drupal distribution created by PreviousNext to provide a core set of elements, functionality and features that can be used to develop government websites
 *
 * @copyright Copyright(c) 2015 Commonwealth of Australia as represented by Department of Finance
 * @license GPL v2 http://www.fsf.org/licensing/licenses/gpl.html
 * @author Department of Finance
 **/

/**
 * Define a default theme constant
 */
define('GOVIMS_DEFAULT_THEME', 'collabco_theme');

/**
 * Define the admin theme.
 */
define('GOVIMS_DEFAULT_ADMIN_THEME', 'seven');


/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function collabco_install() {

   $revert = array('collabco_appearance_feature','basic_page_feature','collabco_core_feature','collabco_challenge_feature','collabco_ideas_feature','collabco_collaboration_feature','collabco_myhub_feature','collabco_views_feature','collabco_message_feature');
  _govims_features_revert($revert);

  // Configure default text formats and basic permissions.
 // _govims_default_formats_and_permissions();

  // Configure basic roles.
 // _govims_create_basic_roles_perms();

  // Set default front-end and admin themes.
  _govims_set_default_themes();

  // // Create additional date formats.
  // _govcms_date_formats();

  // // Setup some default blocks.
  // _govcms_default_blocks();

  // // Set up twitter block.
  // _govcms_twitter_block();

  // Set some default variable values.
  //_govims_default_variables();

  // // Enable full image display mode.
  // _govcms_install_full_image_display();

  // Set default menu items.
  _govims_set_menu();

  // // Setup login destination.
  // _govcms_setup_login_destination();

  // // Set defaults for the contact form.
  // _govcms_contact_form_defaults();

  // // Set up metatag
  // _govcms_setup_metatag();

  // // Final modules.
  // module_enable(array('govcms_password_policy'));

  // Clean up after install.
  govims_cleanup();
}

/**
 * Returns a list of the themes that govCMS supports.
 */
function govims_supported_themes() {
  return array(
    GOVIMS_DEFAULT_THEME,
  );
}



/**
 * Set default themes.
 */
function _govims_set_default_themes() {
  // Any themes without keys here will get numeric keys and so will be enabled,
  // but not placed into variables.
  //
  // The install_state data is discarded after the last core install task, so
  // we set install_profile specifically to ensure that drupal_get_profile()
  // returns the correct profile name and finds the profile themes.
  theme_enable(array('bootstrap'));
  $enable = array(
    'theme_default' => GOVIMS_DEFAULT_THEME,
    'admin_theme' => GOVIMS_DEFAULT_ADMIN_THEME,
    'install_profile' => 'collabco',
   );
  theme_enable($enable);

  foreach ($enable as $var => $theme) {
    if (!is_numeric($var)) {
      variable_set($var, $theme);
    }
  }

  // Disable the default Bartik & default admin theme.
 
  theme_disable(array('bartik'));
}


/**
 * Set default menu items.
 */
function _govims_set_menu() {

  // Create a Home link in the main menu.
  $item = array(
    'link_title' => st('Home'),
    'link_path' => '<front>',
    'menu_name' => 'main-menu',
    'weight' => -50,
  );
  $item = array(
    'link_title' => st('Collaboration'),
    'link_path' => 'collaborate',
    'menu_name' => 'main-menu',
    'weight' => 50,
  );
  menu_link_save($item);

  menu_rebuild();
}

/**
 * Reverts a list of features.
 */
function _govims_features_revert($modules) {
  module_load_include('inc', 'features', 'features.export');
  features_include();
  foreach ($modules as $module) {
    if (($feature = feature_load($module, TRUE)) && module_exists($module)) {
      $components = array();
      // Forcefully revert all components of a feature.
      foreach (array_keys($feature->info['features']) as $component) {
        if (features_hook($component, 'features_revert')) {
          $components[] = $component;
        }
      }
    }
    foreach ($components as $component) {
      features_revert(array($module => array($component)));
    }
  }
}


/**
 * Implements hook_install_tasks_alter().
 */
function collabco_install_tasks_alter(&$tasks, $install_state) {

  $tasks['collabco_finished'] = $tasks['install_finished'];
  unset($tasks['install_finished']);

  // //_govcms_set_theme(GOVIMS_INSTALL_DEFAULT_THEME);
  // drupal_add_css('profiles/govcms/css/install.css');
  // drupal_add_js('profiles/govcms/js/install.js');
}

/**
 * Overrides the core install_finished.
 */
function collabco_finished() {
  drupal_set_title(st('@drupal installation complete', array('@drupal' => drupal_install_profile_distribution_name())), PASS_THROUGH);
  $messages = drupal_set_message();
  $output = '<p>' . st('Congratulations, you installed @drupal!', array('@drupal' => drupal_install_profile_distribution_name())) . '</p>';
  $output .= '<p>' . (isset($messages['error']) ? st('Review the messages above before visiting <a href="@url">your new site</a>.', array('@url' => url(''))) : st('<a href="@url" class="button">Visit your new site</a>', array('@url' => url('')))) . '</p>';

  // Flush all caches to ensure that any full bootstraps during the installer
  // do not leave stale cached data, and that any content types or other items
  // registered by the installation profile are registered correctly.

  variable_set('features_rebuild_on_flush', FALSE);
  drupal_flush_all_caches();

  // Remember the profile which was used.
  variable_set('install_profile', drupal_get_profile());

  // Installation profiles are always loaded last.
  db_update('system')
    ->fields(array('weight' => 1000))
    ->condition('type', 'module')
    ->condition('name', drupal_get_profile())
    ->execute();

  // Cache a fully-built schema.
  drupal_get_schema(NULL, TRUE);

  // Run cron to populate update status tables (if available) so that users
  // will be warned if they've installed an out of date Drupal version.
  // Will also trigger indexing of profile-supplied content or feeds.
  drupal_cron_run();
  variable_set('features_rebuild_on_flush', TRUE);

  return $output;
}



/**
 * Run any cleanup or other functions required after install is finished.
 */
function collabco_cleanup() {

  //govcms_rebuild_sitemap();

  // Rebuild default config (permissions).
  defaultconfig_rebuild_all();

  // Required by view_unpublished module.
  node_access_rebuild();

  cache_clear_all();

  // // @todo Image styles not being applied to beans on install.
  // features_revert(array('govcms_beans' => array('field')));

  // // @todo Wysiwyg profiles not being applied on install.
  // features_revert(array('govcms_editing' => array('wysiwyg')));

  // Enable OpenAccess buttons.
  //govcms_enable_openaccess_buttons();

}

/**
 * Force-set a theme at any point during the execution of the request.
 *
 * Drupal doesn't give us the option to set the theme during the installation
 * process and forces enable the maintenance theme too early in the request
 * for us to modify it in a clean way.
 *
 * This function was helpfully taken from Commerce Kickstart.
 */
function _collabco_set_theme($target_theme) {
  if ($GLOBALS['theme'] != $target_theme) {
    unset($GLOBALS['theme']);

    drupal_static_reset();
    $GLOBALS['conf']['maintenance_theme'] = $target_theme;
    _drupal_maintenance_theme();
  }
}





